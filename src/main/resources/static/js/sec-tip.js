/**
 * @description 登录左侧-相关安全TIPS、面试题等quote
 * @author:  whgojp
 * @email:  whgojp@foxmail.com
 * @Date: 2024/6/17 20:45
 */
const secTip = [
    // 计算机网络相关
    {
        question: 'OSI 的七层模型都有哪些?',
        answer: '物理层 --> 数据链路层 --> 网络层 --> 传输层\n' +
            '--> 会话层 --> 表示层 --> 应用层',
    },
    {
        question: '从浏览器地址栏输入url到显示主页的过程?',
        answer: '1.DNS解析，查找域名对应的IP地址\n' +
            '2.与服务器通过三次握手，建立TCP连接\n' +
            '3.向服务器发送HTTP请求\n' +
            '4.服务器处理请求，返回网页内容\n' +
            '5.浏览器解析并渲染页面\n' +
            '6.TCP四次挥手，连接结束\n',
    },
    {
        question: '对称加密与非对称加密有什么区别?',
        answer: '对称加密：指加密和解密使用同一密钥，优点是运算速度较快，缺点是如何安全将密钥传输给另一方。常见的对称加密算法有：DES、AES等。\n' +
            '非对称加密：指的是加密和解密使用不同的密钥（即公钥和私钥）。公钥与私钥是成对存在的，如果用公钥对数据进行加密，只有对应的私钥才能解密。常见的非对称加密算法有RSA。',
    },
    {
        question: 'Cookies和session区别？',
        answer: '1.Cookies是在客户端存储数据的技术，而Session是在服务器端存储数据的技术。\n' +
            '2.Cookies可以存储简单的信息，而Session可以存储任意类型的数据。\n' +
            '3.此外，Cookies可以在多个浏览器之间共享，而Session只能在同一浏览器之间共享。',
    },
    {
        question: 'forward和redirect的区别？',
        answer: '直接转发方式(Forward)，客户端和浏览器只发出一次请求，Servlet、HTML、JSP或其它信息资源，由第二个信息资源响应该请求，在请求对象request中，保存的对象对于每个信息资源是共享的。\n' +
            '间接转发方式(Redirect)，实际是两次HTTP请求，服务器端在响应第一次请求的时候，让浏览器再向另外一个URL发出请求，从而达到转发的目的。\n',
    },
    // 渗透测试相关
    {
        question: 'OWAP TOP 10都有哪些？',
        answer: 'SQL注入\n' +
            '2、失效的身份认证和会话管理\n' +
            '3、跨站脚本攻击XSS\n' +
            '4、直接引用不安全的对象\n' +
            '5、安全配置错误\n' +
            '6、敏感信息泄露\n' +
            '7、缺少功能级的访问控制\n' +
            '8、跨站请求伪造CSRF\n' +
            '9、使用含有已知漏洞的组件\n' +
            '10、未验证的重定向和转发',
    },
    {
        question: '常规渗透测试流程？',
        answer: '渗透测试的步骤通常包括信息收集、漏洞扫描、漏洞利用、权限提升和结果报告。',
    },
    {
        question: '信息收集关注点？',
        answer: '目标主机的DNS信息、IP地址、子域名、旁站和C段、CMS类型、敏感目录、端口信息、操作系统版本、网站架构、漏洞信息、服务器与中间件信息、邮箱',
    },
    {
        question: '常见未授权漏洞有哪些？',
        answer: '1.SpringBoot Actuator 未授权访问\n' +
            '2.Apache Spark未授权访问\n' +
            '3.Solr 未授权访问\n' +
            '4.Weblogic 未授权访问\n' +
            '5.Zabbix 未授权访问\n' +
            '6.Kibana 未授权访问漏洞\n' +
            '7.Elasticsearch 未授权访问漏洞\n' +
            '8.Druid未授权访问漏洞\n' +
            '9.FTP 未授权访问漏洞\n' +
            '10.JBoss未授权访问漏洞',
    },
    {
        question: '序列化与反序列化',
        answer: '1.序列化是指将数据结构或对象状态转换成可存储或可传输的形式的过程。这种形式通常是字节流，但也可以是其他形式，如XML、JSON等。序列化后的数据可以写入文件、数据库，或通过网络传输到其他系统。\n' +
            '2.反序列化是序列化过程的逆过程，即将序列化形式的数据恢复成原有的数据结构或对象状态。通过反序列化，可以从文件、数据库读取数据，或接收通过网络传输的数据，并重构成原始数据结构或对象。',
    },
    // 内网相关
    {
        question: '域渗透流程？',
        answer: '  拿到跳板机后(提权)，内网存活主机探测、查看是否在域内(定位DC位置)、查看是否有能直接提权域管的漏洞(Netlogon ADCS MS14-068 永恒之蓝)、提取本机Hash(域管是否登陆过本机)进行横向移动(IPC WMI SMB RDP)……、拿到域控后进行提权，然后制作黄金票据做好权限维持，清理日志痕迹',
    },
    // 应急响应相关
    {
        question: '应急响应基本流程？',
        answer: 'PDCERF模型：准备、检测、抑制、根除、恢复、总结',
    },
    {
        question: '分析服务器上的安全问题，需要关注哪些数据？',
        answer: '  历史命令、异常端口、异常进程、系统日志，定时任务、系统启动项、系统日志、系统路由信息、账户安全、隐藏文件等',
    },
    {
        question: '中挖矿脚本怎么分析解决？',
        answer: 'ps -aux查看进程分析\n' +
            'top分析算力情况，算力特别多的一般是挖矿病毒\n' +
            '对流量进行过滤含有矿池服务器的的流量包就是挖矿病毒\n' +
            '以及任务计划可以排查出挖矿病毒，然后kill掉进程，rm掉程序',
    },
    {
        question: '钓鱼邮件特征',
        answer: '1.邮件原文：发信人地址(邮件代发、伪造相似域名),邮件正文,邮件源代码(发送方IP、X-Mailer、邮件发送平台(Gophish)、指纹特征)\n' +
            '2.附件内容：钓鱼链接(短域名),EXE(BAT文件、免杀处理、RLO隐藏、修改程序图标),Office(加载宏代码、CVE漏洞、压缩包)',
    },
    {
        question: '远控后门分析技术',
        answer: '1.在虚拟机环境中进行分析。\n' +
            '2.使用态势感知平台进行全面监控和分析。\n' +
            '3.手动进行逆向分析，以深入了解后门行为和原理。\n',
    },

    // 开发安全相关
    {
        "question": "开发安全-安全编码标准",
        "answer": "  遵循行业标准的安全编码指南，如OWASP（开放Web应用程序安全项目）发布的安全编码实践。"
    },
    {
        "question": "开发安全-输入验证和输出编码",
        "answer": "1.对所有用户输入进行严格验证，防止SQL注入、跨站脚本（XSS）等攻击。\n2.对输出进行适当编码，以防止输出数据引起安全问题。"
    },
    {
        "question": "开发安全-最小权限原则",
        "answer": "  确保用户和系统组件只有执行其任务所需的最低权限，以减小潜在的攻击面。"
    },
    {
        "question": "开发安全-加密敏感数据",
        "answer": "  在存储和传输过程中使用强加密算法保护敏感数据，如个人信息、密码、金融数据等。"
    },
    {
        "question": "开发安全-安全认证和授权",
        "answer": "  实施强密码策略、双因素认证（2FA）等措施来确保用户的身份安全。"
    },
    {
        "question": "开发安全-自动化CI/CD安全集成",
        "answer": "  在持续集成/持续交付（CI/CD）管道中集成安全检查工具，以便在构建和部署过程中自动执行安全扫描和测试。"
    },

    // 应用安全相关
    {
        question: '应用安全-软件成分分析(SCA)',
        answer: '  用于识别、管理和追踪软件中的开源组件及第三方库的来源、版本、许可证信息，并通过SBOM分析、漏洞识别与修复，全面检测并解决安全漏洞和合规性问题。',
    },
    {
        question: '应用安全-静态成分分析(SAST)',
        answer: '  SAST的工作原理主要基于静态代码分析技术，静态代码分析是一种在不执行程序的情况下检查源代码或字节码的方法，旨在发现潜在的安全漏洞和代码缺陷，通常在开发的编码和测试阶段实施，并集成到CI服务器，或者更近一些，集成到IDE中。',
    },
    {
        question: '应用安全-动态应用安全测试(DAST)',
        answer: '  在应用程序运行时，通过模拟攻击者的行为来测试和分析其安全性，以发现潜在漏洞的测试方法。',
    },
    {
        question: '应用安全-交互式应用安全测试(IAST)',
        answer: '  在应用程序运行时，通过实时嵌入分析同时进行静态和动态检测，以识别和修复安全漏洞的测试方法。',
    },
    {
        question: '应用安全-运行时应用自我保护(RASP)',
        answer: '  运行时应用自我保护，在应用程序运行时，通过嵌入式技术实时监控和保护应用免受攻击的安全解决方案。',
    },
    {
        question: '应用安全-应用安全态势管理(ASPM)',
        answer: '  应用安全态势管理，通过提供对应用程序安全状态的持续可见性和分析，帮助组织在整个CI/CD管道中主动识别和应对安全风险。',
    },
    {
        question: '应用安全-Web应用防火墙(WAF)',
        answer: '  通过监控和过滤HTTP/HTTPS流量来保护Web应用程序免受常见网络攻击。',
    },

    // 甲方安全相关
    {
        question: '安全左移-SDL与DevSecOps',
        answer: '1.SDL(安全开发生命周期)：SDL的核心是在软件开发的每个阶段（需求、设计、编码、测试、维护）集成安全活动，旨在减少漏洞，降低上线前的安全风险。\n' +
            '2.DevSecOps(在DevOps模式下提出的安全模式)：在DevOps模式下提出的安全方法，继承了SDL的安全措施，并通过流程优化和自动化工具（如SCA、SAST、DAST、IAST）深入实施，强调建立全员参与的安全文化，确保人人为安全负责。',
    },
    {
        question: '甲方安全建设包括哪些内容？',
        answer: '  甲方安全建设涵盖网络安全管理、建设与运营、数据安全、身份与访问管理、应急响应、供应链安全、物理安全、法规遵从、安全监测与威胁情报、隐私保护等多个方面。',
    },
    {
        question: '什么是ISO27000？',
        answer: '  ISO 27000系列标准，即信息安全管理体系标准，是由国际标准化组织（ISO）发布的一套聚焦信息安全的管理标准。该标准为组织提供了一种系统化、持续性的框架，用于建立、实施、运行、监控、评估、维护和改进信息安全管理体系。',
    },
    {
        question: '什么是等保(等级保护制度)?',
        answer: '  等保是指依据国家网络安全等级保护规范，由具备资质的测评机构对信息系统、数据资源、云计算、物联网、工业控制系统等对象的安全等级进行检测评估。',
    },
    {
        question: '什么是数据分类分级？',
        answer: '1.数据分类：根据数据的属性或特征，将数据按照一定原则进行区分和归类，以便更好地管理和使用。分类维度可能包括行业、业务领域、数据来源、共享和开放性等。\n'
            + '2.数据分级：根据数据的重要性和影响程度将其划分等级，确保数据获得与其价值相匹配的保护级别，从而更精准地识别并保护关键数据。',
    },

]